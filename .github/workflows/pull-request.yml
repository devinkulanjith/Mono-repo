name: IO actions
'on':
  pull_request:
  push:
    branches:
      - 'main'
jobs:
  io-app-test:
    name: IO app test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: 12.x
        env:
          RUNNER_TEMP: /tmp
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: '${{ steps.yarn-cache-dir-path.outputs.dir }}'
          key: "${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}"
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Run test on every builder directory
        uses: vtex/action-io-app-test@master
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
      - uses: actions/setup-node@master
        with:
          node-version: 12.x
        env:
          RUNNER_TEMP: /tmp
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: 'echo "::set-output name=dir::$(yarn cache dir)"'
      - uses: actions/cache@v1
        id: yarn-cache
        with:
          path: '${{ steps.yarn-cache-dir-path.outputs.dir }}'
          key: "${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}"
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Lint project
        uses: vtex/action-lint@master

  # link:
  #   runs-on: ubuntu-latest
  #   steps:
  #     - uses: actions/checkout@master
  #       with:
  #         persist-credentials: false
  #         fetch-depth: 0
  #         github_token: ${{ secrets.HUB_TOKEN }}
  #     - run: |
  #         git config --global user.email "devin.gallage@clouda.io"
  #         git config --global user.name "kulanjith"
  #     - uses: actions/checkout@v3
  #     - uses: actions/setup-node@v3
  #       with:
  #         node-version: 16
  #     - name: Install toolbelt
  #       run: |
  #         yarn global add vtex
  #         echo "$(yarn global bin)" >> $GITHUB_PATH
  #     - uses: vtex/action-toolbelt-login@v1
  #       with:
  #         account: cloudab2b
  #         app-key: ${{ secrets.CLOUDA_B2B_APP_KEY }}
  #         app-token: ${{ secrets.CLOUDA_B2B_APP_TOKEN }}
  #     - name: release new version
  #       run: chmod +x ./release.sh && ./release.sh
  #       shell: bash

  AppLink:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
          github_token: ${{ secrets.HUB_TOKEN }}
      - run: |
          git config --global user.email "devin.gallage@clouda.io"
          git config --global user.name "kulanjith"
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Install toolbelt
        run: |
          yarn global add vtex
          echo "$(yarn global bin)" >> $GITHUB_PATH
      - uses: vtex/action-toolbelt-login@v1
        with:
          account: cloudab2b
          app-key: ${{ secrets.CLOUDA_B2B_APP_KEY }}
          app-token: ${{ secrets.CLOUDA_B2B_APP_TOKEN }}
      - uses: Stockopedia/action-get-changed-files@v1
        id: get_changed
        with:
          github-token: ${{ secrets.CLOUDAB2B_GITHUB_TOKEN }}
          foldersOnly: true
          format: json
      - name: Echo
        run: echo "CHANGED_DIRECTORIES=${{ steps.get_changed.outputs.changed }}" >> $GITHUB_ENV
        shell: bash
      - name: app links
        run: python3 main.py
        shell: bash

  deployments:
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    steps:
      - uses: actions/checkout@master
        with:
          persist-credentials: false
          fetch-depth: 0
          github_token: ${{ secrets.HUB_TOKEN }}
      - run: |
          git config --global user.email "devin.gallage@clouda.io"
          git config --global user.name "kulanjith"
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install toolbelt
        run: |
          yarn global add vtex
          echo "$(yarn global bin)" >> $GITHUB_PATH
      - uses: vtex/action-toolbelt-login@v1
        with:
          account: cloudab2b
          app-key: ${{ secrets.CLOUDA_B2B_APP_KEY }}
          app-token: ${{ secrets.CLOUDA_B2B_APP_TOKEN }}
      - name: deploy the apps
        run: chmod +x ./deployment.sh && ./deployment.sh
        shell: bash

  blockChanges:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
        with:
          persist-credentials: false
          fetch-depth: 0
          github_token: ${{ secrets.HUB_TOKEN }}
      - run: |
          git config --global user.email "devin.gallage@clouda.io"
          git config --global user.name "kulanjith"
      - uses: actions/checkout@v3
      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Install toolbelt
        run: |
          yarn global add vtex
          echo "$(yarn global bin)" >> $GITHUB_PATH
      - uses: vtex/action-toolbelt-login@v1
        with:
          account: cloudab2b
          app-key: ${{ secrets.CLOUDA_B2B_APP_KEY }}
          app-token: ${{ secrets.CLOUDA_B2B_APP_TOKEN }}  
      - name: get file changed
        uses: tj-actions/verify-changed-files@v12
        id: verify-changed-files
        with: 
          files: |
            react-app-1/store
      - name: Run step only when any of the above files change.
        if: steps.verify-changed-files.outputs.files_changed == 'true'
        run: |
          echo "Changed files: ${{ steps.verify-changed-files.outputs.changed_files }}"

  conditional_step:
    runs-on: 'ubuntu-20.04'
    steps:
      - uses: actions/checkout@v2
        with:
          # Checkout as many commits as needed for the diff
          fetch-depth: 2
      - shell: pwsh
        # Give an id to the step, so we can reference it later
        id: check_file_changed
        run: |
          # Diff HEAD with the previous commit
          $diff = git diff --name-only HEAD^ HEAD

          # Check if a file under docs/ or with the .md extension has changed (added, modified, deleted)
          $SourceDiff = $diff | Where-Object { $_ -match '^react-app-1/store/'}
          $HasDiff = $SourceDiff.Length -gt 0

          # Set the output named "docs_changed"
          Write-Host "::set-output name=docs_changed::$HasDiff"

      # Run the step only with "docs_changed" equals "True"
      - shell: pwsh
        # steps.<step_id>.outputs.<output name>
        if: steps.check_file_changed.outputs.docs_changed == 'True'
        run: echo "publish docsss"  
